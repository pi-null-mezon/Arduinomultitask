#include "MirmPS_assemf.h"

.global copyContext

copyContext:         ;метка входа в функцию.
mov r30,r24          ;перемещаем полученное значение
mov r31,r25          ;в регистровую пару Z
ldi r29,0x05         ;устанавливаем в регистровую пару 
ldi r28,0x00         ;Y адрес 0x0500
ldi r18,35           ;Нам надо отщелкать 35 байтов
					 ;в r18 будет счетчик.

adiw r30,1           ;Инкрементация регистровой пары Z
                     ;нужна по соображениям хитрой 
					 ;адресной математики 

					 ;С инициализацией закончили.

copyContext_1:		 ;Точка входа рабочего цикла

LD r19,-Y            ;Декрементировать Y, после чего
					 ;ЗАГРУЗИТЬ В регистр r19 
					 ;содержимое ИЗ ячейки на которую Y
					 ;ссылается
					  	 
ST -Z,r19            ;Декрементировать Z, после чего
					 ;ЗАПИСАТЬ ИЗ регистра r19 
					 ;содержимое В ячейку на которую Z
					 ;ссылается
					  
dec r18              ;Декрементировать счетчик.
brne copyContext_1   ;Если r18 не равно нулю
					 ;вернуться к точке copyContext_1
					 ; иначе

sbiw r30,1		     ;Декрементация регистровой пары Z
                     ;нужна по соображениям хитрой 
					 ;адресной математики

mov r24,r30          ;Записываем назад в R25:R24
mov r25,r31          ;Тот адрес на котором мы остановились

ret                  ;Деректива возврата из функции 


